/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

/**
 *
 * @author Luis
 */
import controlador.ControladorPrograma;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import modelo.Bicicleta;
import modelo.CuadroBici;

public class VentanaPrograma extends javax.swing.JFrame {

    //Atributos de la tabla..
    DefaultTableModel mt = new DefaultTableModel();

    /**
     * Creates new form VentanaPrograma
     */
    public VentanaPrograma() {
        initComponents();

        // Colocamos los encabezados a la tabla
        String headers[] = {"Id", "Marca", "Cantidad de cambios", "Rodado", "Cuadro", "Tipo"};

        //Agregamos los encabezados a la tabla
        mt.setColumnIdentifiers(headers);

        tabla_valores.setModel(mt);

        //Agregamos la funci√≥n para poder seleccionar un elemento de la tabla y cargar en los campos
        tabla_valores.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                cargarDatosEnCampos();
            }
        }
        );
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jP_contenedor = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jT_Id = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jT_Marca = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jT_CantidadCambios = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jT_Rodado = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jT_Cuadro = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jT_Tipo = new javax.swing.JTextField();
        btnGuardar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla_valores = new javax.swing.JTable();
        btn_limpiar = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jP_contenedor.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        jLabel1.setText("Id");

        jLabel2.setText("Marca");

        jLabel3.setText("Cantidad de Cambios");

        jLabel4.setText("Rodado");

        jLabel5.setText("Cuadro");

        jLabel6.setText("Tipo");

        btnGuardar.setText("Guardar");

        btnEliminar.setText("Eliminar");

        btnActualizar.setText("Actualizar");

        jLabel7.setText("(ej: 25626)");

        jLabel8.setText("(ej: MTB, RUTA, CITY, etc)");

        jLabel10.setText("(ej: 24, 26, 27, 29, etc)");

        jLabel9.setText("(ej: 'XS', 'S', 'M', 'L')");

        tabla_valores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6"
            }
        ));
        jScrollPane2.setViewportView(tabla_valores);

        btn_limpiar.setText("Limpiar");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel11.setText("Registro de Bicicletas");

        javax.swing.GroupLayout jP_contenedorLayout = new javax.swing.GroupLayout(jP_contenedor);
        jP_contenedor.setLayout(jP_contenedorLayout);
        jP_contenedorLayout.setHorizontalGroup(
            jP_contenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jP_contenedorLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jP_contenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jP_contenedorLayout.createSequentialGroup()
                        .addComponent(btnGuardar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnActualizar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_limpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(520, 520, 520))
                    .addGroup(jP_contenedorLayout.createSequentialGroup()
                        .addGroup(jP_contenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jP_contenedorLayout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel8))
                            .addGroup(jP_contenedorLayout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel9))
                            .addGroup(jP_contenedorLayout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel10))
                            .addComponent(jLabel2)
                            .addGroup(jP_contenedorLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7))
                            .addComponent(jT_Marca)
                            .addComponent(jT_CantidadCambios)
                            .addComponent(jT_Rodado)
                            .addComponent(jT_Cuadro)
                            .addComponent(jT_Id, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jT_Tipo, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 553, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jP_contenedorLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addGap(384, 384, 384))
        );
        jP_contenedorLayout.setVerticalGroup(
            jP_contenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jP_contenedorLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel11)
                .addGap(31, 31, 31)
                .addGroup(jP_contenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jP_contenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jP_contenedorLayout.createSequentialGroup()
                        .addComponent(jT_Id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jT_Marca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jT_CantidadCambios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jP_contenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jT_Rodado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jP_contenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jT_Cuadro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jP_contenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jT_Tipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(jP_contenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar)
                    .addComponent(btnEliminar)
                    .addComponent(btnActualizar)
                    .addComponent(btn_limpiar))
                .addContainerGap(63, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jP_contenedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jP_contenedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 6, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrograma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrograma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrograma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrograma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrograma().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btn_limpiar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jP_contenedor;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jT_CantidadCambios;
    private javax.swing.JTextField jT_Cuadro;
    private javax.swing.JTextField jT_Id;
    private javax.swing.JTextField jT_Marca;
    private javax.swing.JTextField jT_Rodado;
    private javax.swing.JTextField jT_Tipo;
    private javax.swing.JTable tabla_valores;
    // End of variables declaration//GEN-END:variables

    public void setActionListener(ControladorPrograma listener) {
        btnGuardar.addActionListener(listener);
        btnActualizar.addActionListener(listener);
        btnEliminar.addActionListener(listener);
        btn_limpiar.addActionListener(listener);
    }

    //Obtenemos los datos que estan cargados en los campos
    public Bicicleta obtenerObjetoBicicleta() {
        String id_Texto = jT_Id.getText();
        String marca = jT_Marca.getText();
        String cantidadCambios_Texto = jT_CantidadCambios.getText();
        String rodado_Texto = jT_Rodado.getText();
        String cuadro_Texto = jT_Cuadro.getText();
        String tipo = jT_Tipo.getText();

        //Inicializamos los atributos
        int id = -1;
        int cantidadCambios = 0;
        float rodado = 0.0f;
        CuadroBici cuadro = null;

        try {
            if (!id_Texto.isEmpty()) {
                if (id_Texto.length() >= 5) {
                    id = Integer.parseInt(id_Texto); //convertimos el String a int

                    if (!cuadro_Texto.isEmpty()) {
                        if (cuadro_Texto.equalsIgnoreCase("XS")
                                || cuadro_Texto.equalsIgnoreCase("S")
                                || cuadro_Texto.equalsIgnoreCase("M")
                                || cuadro_Texto.equalsIgnoreCase("L")
                                || cuadro_Texto.equalsIgnoreCase("XL")) {
                            cuadro = CuadroBici.valueOf(cuadro_Texto.toUpperCase());

                            if (!cantidadCambios_Texto.isEmpty()) {
                                cantidadCambios = Integer.parseInt(cantidadCambios_Texto);
                            }

                            if (!rodado_Texto.isEmpty()) {
                                rodado = Float.parseFloat(rodado_Texto);
                            }

                            //Retornamos el objeto Bicicleta
                            return new Bicicleta(id, marca, cantidadCambios, rodado, cuadro, tipo);

                        } else {
                            JOptionPane.showMessageDialog(null, cuadro_Texto + " no es un valor v√°lido, tiene que ser como el indicado en el ejemplo.");
                            return null;
                        }

                    } else {
                        JOptionPane.showMessageDialog(null, "Necesita especificar que tipo de cuadro es. ");
                        return null;
                    }

                } else {
                    JOptionPane.showMessageDialog(null, "El id no puede ser menor de 5 d√≠gitos. ");
                    return null;
                }
            } else {
                JOptionPane.showMessageDialog(null, "El id no puede estar vacio. ");
                return null;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Error al intentar convertir una letra en un numero, verifica los campos ingresados. ");
            return null;
        }


    }

    //Limpiamos los campos 
    public void limpiarCampos() {
        jT_Id.setText("");
        jT_Marca.setText("");
        jT_CantidadCambios.setText("");
        jT_Rodado.setText("");
        jT_Cuadro.setText("");
        jT_Tipo.setText("");
    }

    public void mostrarListaBicicletaTabla(ArrayList<Bicicleta> lista) {
        if (lista != null && !lista.isEmpty()) {
            for (Bicicleta bicicleta : lista) {
                Object[] fila = {
                    bicicleta.getId(),
                    bicicleta.getMarca(),
                    bicicleta.getCantidadCambios(),
                    bicicleta.getRodado(),
                    bicicleta.getCuadro(),
                    bicicleta.getTipo()
                };

                mt.addRow(fila);
            }
        }
    }

    public void addAListaBicicleta(Bicicleta bici) {
        if (bici != null) {
            Object[] fila = {
                bici.getId(),
                bici.getMarca(),
                bici.getCantidadCambios(),
                bici.getRodado(),
                bici.getCuadro(),
                bici.getTipo()
            };

            mt.addRow(fila);
        }
    }

    public int eliminarFila() {
        //mt.removeRow(tabla_valores.getSelectedRow());
        int filaSeleccionada = tabla_valores.getSelectedRow(); //Obtenemos la fila seleccionada
        int id = 0;

        if (filaSeleccionada != -1) { // Verificamos que exista una fila seleccionada
            id = (int) mt.getValueAt(filaSeleccionada, 0); // Obtenemos el Id de la tabla
            mt.removeRow(filaSeleccionada); // Eliminamos la fila de la tabla

        } else {
            JOptionPane.showMessageDialog(null, "Seleccione una fila para eliminar.");
        }
        return id;
    }

    public int filaAActualizar() {
        int filaSeleccionada = tabla_valores.getSelectedRow();
        int id = 0;

        if (filaSeleccionada != -1) {
            id = (int) mt.getValueAt(filaSeleccionada, 0); // Obtenemos el Id de la tabla
        }
        return id; //Retornamos el id
    }

    public void cargarDatosEnCampos() {

        int filaSeleccionada = tabla_valores.getSelectedRow();

        if (filaSeleccionada != -1) { // Si hay una fila seleccionada cargamos los datos
            Object id = mt.getValueAt(filaSeleccionada, 0);
            Object marca = mt.getValueAt(filaSeleccionada, 1);
            Object cantidadCambios = mt.getValueAt(filaSeleccionada, 2);
            Object rodado = mt.getValueAt(filaSeleccionada, 3);
            Object cuadro = mt.getValueAt(filaSeleccionada, 4);
            Object tipo = mt.getValueAt(filaSeleccionada, 5);

            // Convertimos los valores seg√∫n los tipos de datos
            jT_Id.setText(id != null ? String.valueOf(id) : "");
            jT_Marca.setText(marca != null ? marca.toString() : "");
            jT_CantidadCambios.setText(cantidadCambios != null ? String.valueOf(cantidadCambios) : "");
            jT_Rodado.setText(rodado != null ? String.valueOf(rodado) : "");

            // Manejo especial para los objetos de tipo CuadroBici
            if (cuadro instanceof CuadroBici) {
                CuadroBici cuadroBici = (CuadroBici) cuadro;
                jT_Cuadro.setText(cuadroBici.name());
            } else {
                jT_Cuadro.setText("");
            }

            jT_Tipo.setText(tipo != null ? tipo.toString() : "");
        }

    }

    public void limpiarTabla() {
        mt.setRowCount(0);
    }

    public void ajustarColumnasTabla() {
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);

        for (int i = 0; i < tabla_valores.getColumnCount(); i++) {
            if (i == 2) {
                tabla_valores.getColumnModel().getColumn(i).setPreferredWidth(280);
            } else {
                tabla_valores.getColumnModel().getColumn(i).setPreferredWidth(150);
            }

            tabla_valores.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
        }
    }

}
